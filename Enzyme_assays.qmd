---
title: "Enzyme Assays"
author: "Raghav Jain"
format: html
editor: visual
---

# 1. Packages

```{r}
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(readxl)){install.packages("readxl")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(Cairo)){install.packages("Cairo")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(ggsci)){install.packages("ggsci")} 
pal_33 <- c("#D51317", "#164194")
pal_45 <- c("#D51317", "#164194", "#F39200FF", "#31B7BCFF")
```

# 2. Cathepsin B Assay

Experiment 30 assay (results were replicated in Experiment 33).

```{r}
mdat <- read_csv("data/CathB/Exp30/2022_0201_CathB_Exp30_r.csv")

mdat$Group <- factor(mdat$Group, 
                     levels = c("RT", "Cold")
                     )
mdat$Treatment <- factor(mdat$Treatment,
                         levels = c("no_prot", "prot",
                                     "prot+E64D")
                         )

p0 <- ggbarplot(mdat, x = "Treatment", y = "Norm_final", 
                add = c("mean_sd", "dotplot"), 
                color = "Group", fill = "Group", 
                add.params = list(width = 0.35, 
                                  binwidth = .15*min(mdat$Norm_final, na.rm = T)
                                  ),
                position = position_dodge(0.8),
                size = 0.5) +
      scale_y_continuous(limits = c(0.00, 1.2*max(mdat$Norm_final, na.rm = T)
                                    ),
                         expand = c(0,0)
                         ) +
      scale_x_discrete(labels = c("- Protein",
                                  "+ Protein",
                                  "+ Protein + inhibitor")
                       )

p1 <- ggpar(p0, palette = pal_33, legend = "top", legend.title = "Temperature", 
            title = "Cathepsin B activity assay",  
            xlab = "Treatment", ylab = "Relative change (normalized to RT)") +
        theme_bw(base_size = 16, base_family = 'Arial') +
        theme(text = element_text(colour = 'black', 
                                  family = "Arial", 
                                  size = 16, 
                                  face = "bold"),
              axis.text.y = element_text(size = 12, hjust = -0.5)
              )

stat.test <- mdat |>
  group_by(Treatment) |>
  na.omit() |>
  t_test(Norm_final ~ Group) |>
  adjust_pvalue(method = "none") |>
  add_significance("p")

stat.test$p.adj.signif <- stat.test$p.signif
stat.test <- stat.test |>
  na.omit() |>
  add_xy_position(fun = "max", "Treatment", dodge = 0.8) 

p2 <- p1 + stat_pvalue_manual(
  stat.test, label = "p", 
  tip.length = 0.02, size = 4,
  hide.ns = F) +
  scale_color_manual(values = c("black", "black"))

CairoPDF(file = "output/Fig2/Fig2B_CathepsinB.pdf", height = 10, width = 12)
  print(p2)
dev.off()
```

# 3. Glucosylceramidase Assay

Exp 45

```{r}
mdat <- read_xlsx("data/Exp45/2023_0324_Exp45_GCase_assay.xlsx", sheet = "Final")

mdat$Treatment <- paste0(mdat$Genotype, "_", mdat$Temp)

mdat$Treatment <- factor(mdat$Treatment, levels = c("Con_RT", "Con_Cold",
                                                    "KD_RT", "KD_Cold"
                                                    )
                         )
GCase <- mdat # save for correlation 

p0 <- ggbarplot(mdat, x = "Treatment", y = "Activity_uU_mg", 
                add = c("mean_sd", "dotplot"), 
                color = "Treatment", fill = "Treatment", 
                add.params = list(width = 0.20, 
                                  binwidth = 0.075*min(mdat$Activity_uU_mg, na.rm = T)
                                  ),
                position = position_dodge(0.8),
                size = 0.5) +
      scale_y_continuous(limits = c(0.00, 1.5*max(mdat$Activity_uU_mg, na.rm = T)
                                    ),
                         expand = c(0,0)
                         )

p1 <- ggpar(p0, palette = pal_45, legend = "top", legend.title = "Temperature", 
            title = "GCase activity assay",  
            xlab = "Treatment", ylab = "Activity (pmol/min/mg)") +
        theme_bw(base_size = 16, base_family = 'Arial') +
        theme(text = element_text(colour = 'black', 
                                  family = "Arial", 
                                  size = 16, 
                                  face = "bold"),
              axis.text.y = element_text(size = 12, hjust = -0.5)
              )

stat.test <- mdat |>
  na.omit() |>
  t_test(Activity_uU_mg ~ Treatment) |>
  adjust_pvalue(method = "none") |>
  add_significance("p")

stat.test$p.adj.signif <- stat.test$p.signif
stat.test <- stat.test |>
  na.omit() |>
  add_xy_position(fun = "mean_sd", dodge = 0.8) 

p2 <- p1 + stat_pvalue_manual(
  stat.test, label = "p.signif",
  step.increase = 0.015,
  bracket.nudge.y = 0,
  tip.length = 0.02, size = 6,
  hide.ns = F) +
  scale_color_manual(values = c("black", "black",
                                "black", "black")
                     )

CairoPDF(file = "output/Fig4/SFig4F_Exp45_GCase.pdf", height = 10, width = 12)
  print(p2)
dev.off()
```

## Lipid-enzyme correlation

Correlate GCase activity to total Cer and HexCer from untargeted data

```{r}
# Load in lipid data using separate script and pull key variables
names(lipids)[1] <- "Sample"
mdat <- merge(GCase, lipids, by = "Sample")

# Plot Cer and GCase first
mdat1 <- mdat |> filter(Subclass == "Total Cer")

p0 <- ggplot(mdat1, aes(x = nmol_g, y = Activity_uU_mg,
                  color = Genotype.x, fill = Genotype.x)) +
    geom_smooth(method = "lm") +
    stat_cor(method = "spearman") +
    geom_point(aes(colour = `Treatment`)) +
    theme_bw(base_size = 12, base_family = "Arial") +
    scale_color_manual(values = c("black", "#164194", "#D51317",
                                  "grey66", "#31B7BCFF", "#F39200FF"
                                   )
                       ) +
    labs(x = "Ceramides (nmol/g liver)",
         y = "GCase activity") +
    theme(legend.position = "none") 

CairoPDF(file = "output/Fig4/Fig4F_GCase_Cer_corr_new.pdf",
         height = 10, width = 8)
  print(p0)
dev.off()



# only plots overall line

p0 <- ggscatter(mdat1,                        
                x = "nmol_g", 
                y = "Activity_uU_mg",
                add = "reg.line", 
               # add.params = list(color = "black", 
                #                  fill = "lightgray"),
                conf.int = T,     
                palette = pal_45,   
                color = "Genotype.x") +                         
  stat_cor(aes(color = "Genotype.x"), method = "spearman",
          #label.x = min(mdat1$nmol_g),               
          p.accuracy = 0.001, r.accuracy = 0.01
          ) +   
  xlab("Total ceramides (nmol/g)") +                
  ylab("GCase activity (pmol/min/mg)") +                     
  ggtitle("Liver data") +   
  theme_bw() +                                       
  theme(legend.position = "right",                        
        text = element_text(size = 16, 
                            family = "Arial"),
        axis.line = element_line(colour = "black")
        )
p0

CairoPDF(file = "output/Fig4/Fig4F_GCase_Cer_corr.pdf",
         height = 8, width = 8)
  print(p0)
dev.off()


# Plot HexCer and GCase 
mdat1 <- mdat |> filter(Subclass == "Total HexCer")

p0 <- ggscatter(mdat1,                        
                x = "nmol_g", 
                y = "Activity_uU_mg",
                add = "reg.line", 
                add.params = list(color = "black", fill = "lightgray"),
                conf.int = T,     
                palette = pal_45,   
                color = "Treatment") +                         
  stat_cor(method = "spearman",
          label.x = min(mdat1$nmol_g),               
          p.accuracy = 0.001, r.accuracy = 0.01
          ) +   
  xlab("Total HexCer (nmol/g)") +                
  ylab("GCase activity (pmol/min/mg)") +                     
  ggtitle("Liver data") +   
  theme_bw() +                                       
  theme(legend.position = "right",                        
        text = element_text(size = 16, 
                            family = "Arial"),
        axis.line = element_line(colour = "black")
        )
p0
```
